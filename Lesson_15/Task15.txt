1. Объявить целочисленный массив arr1 размерность 10
1.1. Заполнить массив случайными числами от -50 до 50
1.2. В текстовый файл array.txt записать массив, каждый элемент которого вдвое больше
элемента массива arr1 с использованием BufferedWriter (все элементы находятся в
одной строке, элементы разделяются пробелами).
1.3. Осуществить считывание массива из файла с использованием BufferedReader, при
считывании в новый массив arr2 записать только положительные элементы.
1.4. Вывести полученный массив

2. Даны два файла, содержащие по целочисленному массиву с пробелами между
элементами. Считать массивы из файлов, создать третий массив содержащий четные
элементы первого и отрицательные элементы второго. Полученный массив записать в
третий файл.

3. Создать класс Person c полями имя, возраст и зарплата.
3.1. Из файла input.txt считать информацию о человеке и создать объект класса Person
3.2. Вывести информацию об объекте
3.3. Если возраст человека больше 40, то удвоить ему зарплату
3.4. Записать информацию об объекте в файл output.txt
3.5. Считывание осуществить двумя способами: в main и при помощи статических методов
класса Person используя BufferedWriter и BufferedReader

4. Создать класс Person c полями имя, возраст и зарплата.
4.1. Создать класс PersonList, реализующий расширяемый массив объектов Person. При
переполнении массива увеличивать его на 50%.
4.2. В классе PersonList реализовать методы добавления объекта в массив, вывода
информации обо всех объектах, получения объекта по индексу и удаления объекта по
индексу.
4.3. В классе PersonList реализовать метод, который считывает информацию о людях из
файла people.txt, создает объекты на основе информации и пополняет массив класса
PersonList, (в каждой строке файла находится информация об одном человеке,
информацию описывающую одного человека разделяет один пробел). При
считывании использовать Scanner

4.4. В классе PersonList реализовать метод, записывающий информацию о людях в файл
people.txt (перезаписывать информацию). При записи использовать PrintWriter
4.5. Иcпользуя интерфейc Comparable, предусмотреть сортировку людей с учетом всех
полей.
4.6. В main загрузить людей из файла.
4.7. Добавить одного человека в список.
4.8. Удалить одного по случайному индексу
4.9. Выполнить сортировку.
4.10. Перезаписать информацию о людях в файл people.txt

5. Создать иерархию классов, описывающую людей (студентов(имя, возраст, средний балл) и
работников(имя, возраст, зп)).
5.1. Создать класс PersonList, реализующий расширяемый массив для хранения
информации о людях с необходимыми метода добавления вывода и удаления
объектов.
5.2. Реализовать набор методов, обеспечивающих считывание и запись информации из/в
файл.
5.3. Считывание и запись реализовать с помощью символьных и байтовых потоков.

6. Учет покупок
6.1 Необходимо организовать учёт покупок в кафетерии, если известно:
заказываемый продукт и его количество.
6.2 О каждом продукте известно его наименование и цена. При этом на
некоторые продукты может быть скидка 10% и 25%.
3.3 Обеспечить ввод и сохранение исходных данных используя символьные потоки ввода
вывода.
3.4 После чтения данных, необходимо добавить несколько новых заказов
продуктов и сохранить изменённые данные в текстовый файл.
3.5 Найти среднюю стоимость покупок продуктов со скидкой 25%
Пример файла для считывания:
Product milk 2.0 1
Discount10Product coffe 3.5 2
Discount25Product cake 1.5 3