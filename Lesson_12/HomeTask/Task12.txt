1. Объявить две целочисленных переменных. Первой присвоить значение 10, в значение второй
записать число, введенное пользователем. Отловить исключение ArithmeticException деления
первой переменной на вторую с помощью блока try catch. Продемонстрировать работу методов
getMessage(), toString(), printStackTrace() на обработанном исключении.
2. Объявить две целочисленных переменных. Первой присвоить значение 10, в значение второй
записать число, введенное пользователем. Отловить исключение Exception деления первой
переменной на вторую с помощью блока try catch.
3. Объявить две целочисленных переменных. Первой присвоить значение 10, в значение второй
записать число, введенное пользователем. Отловить исключения
InputMismatchException(Неверный ввод числа) и ArithmeticException (деление первой переменной
на вторую) с помощью блока try catch (использовать два catch).
4. Объявить две целочисленных переменных. Первой присвоить значение 10, в значение второй
записать число, введенное пользователем. Отловить исключения
InputMismatchException(Неверный ввод числа) и ArithmeticException (деление первой переменной
на вторую) с помощью блока try catch (использовать один catch).
5. 5.1. Объявить целочисленные переменные:
size, x1=10, x2, index, res1, res2;
5.2. Объявить строковые переменные:
tmpStr и resStr=””;
5.3. Объявить переменную arr целочисленного массива и присвоить ей значение null
5.4. Считать из консоли размерность массива в tmpStr
5.5. Преобразовать значение tmpStr к int и записать в size
5.6. Выделить память для массива arr на size элементов
5.7. Считать из консоли значение в x2
5.8. Разделить x1 на x2 и результат записать в res1
5.9. Считать из консоли индекс элемента массива в index
5.10. В элемент массива arr c индексом index записать res1
5.11. В res2 записать значение равное arr[index]*2
5.12. Если res2 не равен нулю, то в resStr записать “Ненулевое значение”
5.13. После конструкции if вывести resStr, преобразованную к верхнему регистру
5.14. Вывести 35 символ строки resStr
Отловить все ошибки используя конкретных наследников Exception c выводом детализирующих
сообщений. Пункт 5.14 отловить с помощью Exception.
6. В классе Main создать статический метод, вычисляющий среднее арифметическое
целочисленного массива. Метод возвращает int. Вычислить среднее арифметическое
заполненного, пустого и null массива в main. Обработать исключения NullPointerException и
ArithmeticException c помощью try catch внутри метода расчета среднего арифметического.
7. В классе Main создать статический метод, вычисляющий среднее арифметическое
целочисленного массива. Метод возвращает int. Вычислить среднее арифметическое
заполненного, пустого и null массива в main. Предупредить что метод может выбрасывать
исключения NullPointerException и ArithmeticException. Обработать исключения по месту вызова.
8. Создать статический void метод С который вычисляет int p = 0/0, отлавливает
ArithmeticException и пробрасывает его дальше.
Создать void метод B, который вызывает метод С. Обрабатывает исключение и пробрасывает его
дальше.
Создать void метод A, который вызывает метод B. Обрабатывает исключение и пробрасывает его
дальше.
Вызвать в методе main метод A, обработать исключение и вне блока try/catch вывести на консоль
инфу, о том что программа завершена успешно.
В каждом методе обрабатывая исключение вывести название метода, в котором оно было
отловлено.